# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:
        if not nums:
            return None
        
        l, r = 0, len(nums) - 1
        mid = (l + r) // 2

        ret = ListNode(nums[mid])
        ret.left = self.sortedArrayToBST(nums[:mid])
        ret.right = self.sortedArrayToBST(nums[mid + 1:])

        return ret

class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:
        def bst(l, r):
            if l > r:
                return None

            mid = (l + r) // 2
            ret = ListNode(nums[mid])
            ret.left = bst(l, mid - 1)
            ret.right = bst(mid + 1, r)

            return ret

        return bst(0, len(nums) - 1)

 0    1   2   3  4
[-10 -3] [0] [5 9]

                     0
            -10            5
        None      -3    None   9
              None  None    None NOne
