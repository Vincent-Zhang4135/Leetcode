class Solution:
    def orangesRotting(self, grid: List[List[int]]) -> int:
        def inGrid(i, j):
            if  0 <= i < len(grid) and 0 <= j < len(grid[0]):
                return True
            return False

        queue = deque()
        freshOranges = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 2:
                    queue.append((i, j))
                elif grid[i][j] == 1:
                    freshOranges += 1

        minutes = 0
        directiosn = [[-1, 0], [1, 0], [0, -1], [0, 1]]
        while queue and freshOranges:
            for i in range(len(queue)):
                currOrange = queue.popleft()
                i, j = currOrange
                for dx, dy in directions:
                    if inGrid(i + dx, j + dy) and grid[i + dx][j + dy] == 1:
                        queue.append((i + dx, j + dy))
                        grid[i + dx][j + dy] = 2
                        freshOranges -= 1
            minutes += 1

        if freshOranges:
            return -1
        return minutes