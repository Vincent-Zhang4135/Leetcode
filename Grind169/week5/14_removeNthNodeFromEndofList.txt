# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        prev = None
        slow = head
        fast = head

        for i in range(n):
            fast = fast.next
        while fast:
            prev = slow
            slow = slow.next
            fast = fast.next

        if prev: 
            prev.next = prev.next.next
            return head
        else:
            return head.next


    V
1

n = 1
V    V     V
1 -> 2 

V          V
1 -> 2


              n = 2
1 -> 2 -> 3 -> 4 -> 5

               V          V
1 -> 2 -> 3 -> 4 -> 5
