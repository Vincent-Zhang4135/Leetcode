# The isBadVersion API is already defined for you.
# def isBadVersion(version: int) -> bool:

# the optimal way to do this is to reduce the number of queries from n 
# to logn, which can be done with a binary search
class Solution:
    def firstBadVersion(self, n: int) -> int:
        l, r = 1, n
        while l <= r:
            mid = ((r - l) // 2) + l
            if isBadVersion(mid):
                r = mid - 1
            else:
                l = mid + 1

        return l

# more intuitive but less compact
class Solution:
    def firstBadVersion(self, n: int) -> int:
        l, r = 1, n
        ans = r
        while l <= r:
            mid = ((r - l) // 2) + l
            if isBadVersion(mid):
                r = mid - 1
                ans = mid
            else:
                l = mid + 1

        return ans