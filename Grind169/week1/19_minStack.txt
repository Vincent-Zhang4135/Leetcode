from collections import deque
class MinStack:
    def __init__(self):
        self.stack = deque()

    def push(self, val: int) -> None:
        """
        if self.stack:
            curr_min = self.stack[-1][1]
        else:
            curr_min = float('inf')
        
        if val < curr_min:
            self.stack.append((val, val))
        else:
            self.stack.append((val, curr_min))
        """

        if self.stack:
            self.stack.append((val, min(val, self.stack[-1][1])))
        else:
            self.stack.append((val, val))

    def pop(self) -> None:
        return self.stack.pop()[0]

    def top(self) -> int:
        if self.stack:
            return self.stack[-1][0]
        else:
            return None

    def getMin(self) -> int:
        return self.stack[-1][1]


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()